#!/usr/bin/env python

import os
import sys
import subprocess

screen_name = 'alabnodaemonservice'

def call_and_check(cmd):
    code = subprocess.call(cmd, shell=True)
    if code != 0:
        print('Command <{}> returned code {}'.format(cmd, code))
        sys.exit(1)
    return

# get output directory
if len(sys.argv) < 3:
    print('Usage: ./AutoDeploy <destination> <example.com> [server.pem][mykeystore.jks]')
    sys.exit(1)

pem_file = None
if len(sys.argv) >= 4:
    pem_file = os.path.abspath(sys.argv[3])

jks_file = None
if len(sys.argv) >= 5:
    jks_file = os.path.abspath(sys.argv[4])

# stop any running servers
cmd = 'screen -X -S {} quit'.format(screen_name)
subprocess.call(cmd, shell=True)

# calculate directory paths
destination_directory = os.path.abspath(sys.argv[1])
parent_directory = os.path.abspath(destination_directory + os.sep + '..')
target_directory_name = os.path.basename(os.path.normpath(destination_directory))

# get domain name
domain_name = sys.argv[2]

# go to the parent directory
os.chdir(parent_directory)

# remove the existing directory
call_and_check('rm -rf {}'.format(target_directory_name))

# clone the repository
cmd = 'git clone https://github.com/ke00n/alabno --depth 1 {}'.format(target_directory_name)
call_and_check(cmd)

# cd into it
os.chdir(destination_directory)

# compile it
call_and_check('make')

# change domain endpoint
endpoint_js_path = destination_directory + '/frontend/webclient/script/endpoint.js'
cmd = "echo \"var ws_address_stem = '://{}:';\" > {}".format(domain_name, endpoint_js_path)
call_and_check(cmd)

# copy over pem and jks files
if pem_file is not None:
    cmd = 'cp {} {}'.format(pem_file, destination_directory + '/frontend/server.pem')
    call_and_check(cmd)
if jks_file is not None:
    cmd = 'cp {} {}'.format(jks_file, destination_directory + '/frontend/mykeystore.jks')
    call_and_check(cmd)
